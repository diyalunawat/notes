import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "./components/theme-provider";
import { NEXT_CACHE_IMPLICIT_TAG_ID } from "next/dist/lib/constants";
import {getKindeServerSession} from "@kinde-oss/kinde-auth-nextjs/server";
import { Navbar } from "./components/Nav";
import prisma from "./lib/db";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Alpha Loop",
  description: "Generated by create next app",
};
async function getData(userId:string)
{ if(userId)
  {
    const data =await prisma.user.findUnique({
      where: {
          id:userId,
      },
      select: {
          colorScheme: true,
      },
  });
  return data;
  }
 
 
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const {getUser} = getKindeServerSession();
  const user = await getUser();
  const data = await getData(user?.id as string);
  return (
    <html lang="en">
      <body className={`${inter.className} ${data?.colorScheme ?? 'theme-red'}`}>
        <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <Navbar/>
            {children}
          </ThemeProvider></body>
    </html>
  );
} 